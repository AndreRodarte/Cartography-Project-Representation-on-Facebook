load("~/GitHub/Cartographies2022Election/Ambiguous names/AN.RData")
View(proper_nouns)
bandeira_nouns <- subset(proper_nouns, token == "Bandeira")
View(bandeira_nouns)
bandeira_nouns_2 <- subset(proper_nouns, token == "bandeira")
View(bandeira_nouns_2)
extrema_nouns <- subset(proper_nouns, token == "Extrema")
View(extrema_nouns)
remove(bandeira_nouns_2)
luz_nouns <- subset(proper_nouns, token == "Luz")
machado_nouns <- subset(proper_nouns, token == "Machado")
View(machado_nouns)
conquista_nouns <- subset(proper_nouns, token == "Conquista")
passos_nouns <- subset(proper_nouns, token == "Passos")
divino_nouns <- subset(proper_nouns, token == "Divino")
View(txt)
head(bandeira_nouns)
#Extract specific proper nouns
bandeira_nouns <- subset(proper_nouns, token == "Bandeira") %>%
filter(feats=="Gender=Masc|Number=Sing")
library(tidyverse)
library(tidytext)
#Extract specific proper nouns
bandeira_nouns <- subset(proper_nouns, token == "Bandeira") %>%
filter(feats=="Gender=Masc|Number=Sing")
View(passos_nouns)
machado_nouns <- subset(proper_nouns, token == "Machado") %>%
filter(dep_rel==!"flat:name")
machado_nouns <- subset(proper_nouns, token == "Machado") %>%
filter(dep_rel!=="flat:name")
machado_nouns <- subset(proper_nouns, token == "Machado") %>%
filter(dep_rel!="flat:name")
View(extrema_nouns)
View(luz_nouns)
luz_nouns <- subset(proper_nouns, token == "Luz") %>%
filter(feats="Gender=Unsp|Number=Sing") %>%
filter(dep_rel="nmod")
luz_nouns <- subset(proper_nouns, token == "Luz") %>%
filter(feats=="Gender=Unsp|Number=Sing") %>%
filter(dep_rel="nmod")
luz_nouns <- subset(proper_nouns, token == "Luz") %>%
filter(feats=="Gender=Unsp|Number=Sing") %>%
filter(dep_rel=="nmod")
View(conquista_nouns)
conquista_nouns <- subset(proper_nouns, token == "Conquista") %>%
filter(feats=="Gender=Masc|Number=Sing")
View(passos_nouns)
View(df_2)
View(df_2)
View(df_2)
View(divino_nouns)
divino_nouns <- subset(proper_nouns, token == "Divino")%>%
filter(feats=="Gender=Masc|Number=Sing")
save.image("C:/Users/andre/Documents/GitHub/Cartographies2022Election/Ambiguous names/AN.RData")
#It can be useful to extract only the words and their pos-tags and
#convert them back into a text format (rather than a tabular format).
tagged_text <- paste(text_anndf$token, "/", text_anndf$xpos, collapse = " ", sep = "")
#It can be useful to extract only the words and their pos-tags and
#convert them back into a text format (rather than a tabular format).
tagged_text <- paste(annotated_text$token, "/", annotated_text$xpos, collapse = " ", sep = "")
View(df_2)
#It can be useful to extract only the words and their pos-tags and
#convert them back into a text format (rather than a tabular format).
tagged_text <- paste(df_2$token, "/", df_2$xpos, collapse = " ", sep = "")
remove(tagged_text)
View(df_2)
load("~/GitHub/Cartographies2022Election/.RData")
View(muni_mentioned)
load("~/GitHub/Cartographies2022Election/Ambiguous names/AN.RData")
load("~/GitHub/Cartographies2022Election/.RData")
library(tidyverse)
library(readr)
library(stringdist)
library(datasets)
library(janitor)
library(lubridate)
library(tidytext)
library(stringr)
library(tokenizers)
library(wordcloud)
library(textdata)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(ggmap)
library(broom)
library(RColorBrewer)
library(viridis)
library(igraph)
library(ggraph)
library(widyr)
library(janeaustenr)
library("lexiconPT")
library(stringi)
library(purrr)
#Regression analysis
#install.packages("caret")
#install.packages("car")
#install.packages("leaps")
#install.packages("MASS")
#install.packages("partykit")
#install.packages("nnet")
#install.packages("EMT")
library(caret)
library(car)
library(leaps)
library(MASS)
library(partykit)
library(nnet)
library(EMT)
#DATA VISUALIZATION
#install.packages('maps')
#install.packages("tibble")
#install.packages("forcats")
#install.packages("plotly")
library(maps)
library(plotly)
library(tibble)
library(forcats)
#Facebook Ads
library(highcharter)
library(httr)
library(furrr)
library(Radlibrary)
library(metatargetr)
library(remotes)
#DATASETS
CrowdTangle <- readr::read_csv('(CART) (COLLECTTED 4-1-2023) CrowdTangle Historical-Report- Parliamentary Candidates MG - 2022-01-01-UNTIL-2023-01-02.csv') %>%
select(page_name, page_id, page_likes, page_followers, timestamp, body, body_description, views_total, interactions, comments, views_post, shares, likes, likes_wow, likes_love, likes_angry, likes_sad)
# Excluding posts created after the election.
CrowdTangle$timestamp <- as.Date(CrowdTangle$timestamp, format = "%m/%d/%Y")
CrowdTangle$postID<-row.names(CrowdTangle)
cutoff_date <- as.Date("2022-10-02")
# Subset the data frame to exclude posts before the cutoff date
CrowdTangle <- CrowdTangle[CrowdTangle$timestamp <= cutoff_date, ]
#This sample procedure yielded a total of 73,159 Facebook posts.
#Data on the municipalities of the state of Minas Gerais (MG)
MGMunicipalities <- readr::read_csv('ListMunicipalitiesIBGE.csv')
#Data on the campaign expenses
dfExpensesTotal <- readr::read_csv("dfCampaignExpenses.csv")%>%
select(SG_UF, DS_CARGO, NR_CANDIDATO, full_name, party, party_abbrev, NM_FORNECEDOR, DS_ORIGEM_DESPESA, DS_DESPESA, VR_DESPESA_CONTRATADA) %>%
filter(DS_CARGO == "Deputado Federal")
#Expenses grouped by candidate
dfExpenses <- dfExpensesTotal %>%
group_by(full_name) %>%
summarise(Expenses = sum(VR_DESPESA_CONTRATADA))
#Adding expenses with online content
dfExpenses_FB <- dfExpensesTotal %>%
filter(str_detect(DS_ORIGEM_DESPESA, "Despesa com Impulsionamento de ConteÃºdos", negate = F)) %>%
group_by(full_name) %>%
summarise(ExpensesAds = sum(VR_DESPESA_CONTRATADA))
dfExpenses <- left_join(dfExpenses, dfExpenses_FB, by="full_name")
####################################################
########  REPLACE AMBIGUOUS NAMES
muni3 <- muni3 %>%
mutate(n = ifelse(name_muni == "bandeira", 28, n)) %>%
mutate(n = ifelse(name_muni == "conquista", 12, n)) %>%
mutate(n = ifelse(name_muni == "divino", 65, n)) %>%
mutate(n = ifelse(name_muni == "extrema", 22, n)) %>%
mutate(n = ifelse(name_muni == "luz", 5, n)) %>%
mutate(n = ifelse(name_muni == "machado", 43, n)) %>%
mutate(n = ifelse(name_muni == "passos", 103, n))
IBGE <- left_join(muni3, MGMunicipalities_Clean, by = "name_muni", copy = T, keep = FALSE)
IBGE <- replace(IBGE, is.na(IBGE), 0)
sum(IBGE$n <10, na.rm=TRUE)
View(IBGE)
CorrelationPopulation <- cor.test(IBGE$n, IBGE$Population_2021,
method = "pearson")
#Correlation between mentions and Human Development Index (IDHM, in Portuguese)
CorrelationIDHM <- cor.test(IBGE$n, IBGE$IDHM,method = "pearson")
CorrelationPIB <- cor.test(IBGE$n, IBGE$PIB_per_capita, method = "pearson")
CorrelationPopulation
CorrelationIDHM
CorrelationPIB
ggplot(data = IBGE) +
geom_jitter() +
aes(x = n, y = IDHM, color = Mesorregiao)+
labs(title = "Relationship between mentions and Human Development Index", x = "Mentions", y = "Human Development Index")
ggplot(data = IBGE) +
geom_jitter() +
aes(x = n, y = Population_2021, color = Mesorregiao)+
labs(title = "Relationship between mentions and population", x = "Mentions", y = "Population")
ggplot(data = IBGE) +
geom_jitter() +
aes(x = n, y = PIB_per_capita, color = Mesorregiao)+
labs(title = "Relationship between mentions and PIB", x = "Mentions", y = "PIB per capita")
BV <- ggplot()+
geom_jitter(data=IBGE, aes(x = n, y = Population_2021, text=name_muni)) +
labs(title = "Relationship between mentions and population (estimated for 2021)", x = "Mentions", y = "population")+
guides(fill = guide_colourbar(title = "Mentions"))
InteractivePopulation <- ggplotly(BV)
InteractivePopulation
BV + facet_wrap(vars(Mesorregiao))
ggplot(data = IBGE) +
geom_jitter() +
aes(x = n, y = PIB_per_capita, color = Mesorregiao)+
labs(title = "Relationship between PIB per capita and mentions", x = "Mentions", y = "PIB per capita")
hist(IBGE$n,
breaks = 100,  # Choose the number of bins automatically using the 'FD' method
col = "skyblue",  # Set the color of the bars
border = "white",  # Set the color of the bar borders
ylab = "",
xlab = "",  # Set the x-axis label
main = "Histogram of Mentions"  # Set the main title
)
IBGE_log <- IBGE
#Log transformation of number of mentions
IBGE_log$n <- log(IBGE_log$n + 1)
hist(IBGE_log$n,
col = "skyblue",  # Set the color of the bars
border = "white",  # Set the color of the bar borders
xlab = "",  # Set the x-axis label
main = "Histogram of Mentions"  # Set the main title
)
Model_Geo <- lm(n ~ Population_2021 + IDHM + PIB_per_capita,
data = IBGE_log)
omnibus_geo <- Anova(Model_Geo, type = "III")
omnibus_geo
# Check for multicollinearity using vif()
vif_geo <- vif(Model_Geo)
print(vif_geo)
summary(Model_Geo)
# Ploting an interactive choropleth map
Map <- ggplot() +
geom_sf(data=IBGE, aes(fill=n, text  = name_muni, geometry = geom), color= NA, size=.15) +
labs(title="2022 Election: municipalities mentioned", size=10) +
guides(fill = guide_colourbar(title = "Mentions")) +
theme_minimal() +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), axis.title = element_blank(),
panel.grid = element_blank()) +
scale_fill_viridis(option="viridis")
InteractiveMap <- ggplotly(Map) %>%
layout(title = list(text = paste0("<B>2022 Election: municipalities mentioned</B>")))
InteractiveMap
load("~/GitHub/Cartographies2022Election/Ambiguous names/AN.RData")
View(df_2)
liberdade_nouns <- subset(proper_nouns, token == "Liberdade")
View(liberdade_nouns)
liberdade_nouns <- subset(proper_nouns, token == "Liberdade") %>%
filter(feats=="Gender=Unsp|Number=Sing")
save.image("C:/Users/andre/Documents/GitHub/Cartographies2022Election/Ambiguous names/AN.RData")
load("~/GitHub/Cartographies2022Election/.RData")
View(muni_unique_candidate)
View(muni_total_candidate)
