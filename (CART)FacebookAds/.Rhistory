# (spend_upper_bound-spend_lower_bound)/2+spend_lower_bound
(spend_upper_bound+spend_lower_bound)/2
}
assign_colors <- function(dat, n = 12) {
color_sample <- colorspace::divergingx_hcl(n)
lenght <- dat$color[is.na(dat$color)] %>% length
if(lenght==0) return(invisible())
cols <- sample(color_sample, lenght, replace = T)
dat$color[is.na(dat$color)] <- cols
return(dat)
}
unnest_geos <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(region_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)%>%
mutate(start_time = x$start_time)%>%
mutate(advertiser_name = x$advertiser_name)
}
unnest_dems <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(demographic_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)
}
last_updated_time <- as.character(Sys.time())
mean(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE) median(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE) sd(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
### ---- Load Packages and Functions  ####
#devtools::install_github("facebookresearch/Radlibrary")
#remotes::install_github("favstats/metatargetr")
library(tidyverse)
library(tidytext)
library(dplyr)
library(janitor)
library(highcharter)
library(httr)
library(furrr)
library(remotes)
library(lubridate)
library(purrr)
library(data.table)
library(stringdist)
#DATA VISUALIZATION
#install.packages('maps')
#install.packages("tibble")
#install.packages("forcats")
#install.packages("plotly")
#install.packages("sf")
library(ggplot2)
library(plotly)
library(sf)
library(maps)
library(tibble)
library(forcats)
#Regression analysis
#install.packages("caret")
#install.packages("car")
#install.packages("leaps")
#install.packages("MASS")
#install.packages("partykit")
#install.packages("nnet")
#install.packages("EMT")
library(caret)
library(car)
library(leaps)
library(MASS)
library(partykit)
library(nnet)
library(EMT)
#################################
###########FUNCTIONS#############
#################################
#Other functions
get_mid <- function(spend_upper_bound, spend_lower_bound) {
# (spend_upper_bound-spend_lower_bound)/2+spend_lower_bound
(spend_upper_bound+spend_lower_bound)/2
}
assign_colors <- function(dat, n = 12) {
color_sample <- colorspace::divergingx_hcl(n)
lenght <- dat$color[is.na(dat$color)] %>% length
if(lenght==0) return(invisible())
cols <- sample(color_sample, lenght, replace = T)
dat$color[is.na(dat$color)] <- cols
return(dat)
}
unnest_geos <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(region_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)%>%
mutate(start_time = x$start_time)%>%
mutate(advertiser_name = x$advertiser_name)
}
unnest_dems <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(demographic_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)
}
last_updated_time <- as.character(Sys.time())
mean(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
median(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
sd(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
### ---- Load Packages and Functions  ####
#devtools::install_github("facebookresearch/Radlibrary")
#remotes::install_github("favstats/metatargetr")
library(tidyverse)
library(tidytext)
library(dplyr)
library(janitor)
library(highcharter)
library(httr)
library(furrr)
library(remotes)
library(lubridate)
library(purrr)
library(data.table)
library(stringdist)
#DATA VISUALIZATION
#install.packages('maps')
#install.packages("tibble")
#install.packages("forcats")
#install.packages("plotly")
#install.packages("sf")
library(ggplot2)
library(plotly)
library(sf)
library(maps)
library(tibble)
library(forcats)
#Regression analysis
#install.packages("caret")
#install.packages("car")
#install.packages("leaps")
#install.packages("MASS")
#install.packages("partykit")
#install.packages("nnet")
#install.packages("EMT")
library(caret)
library(car)
library(leaps)
library(MASS)
library(partykit)
library(nnet)
library(EMT)
#################################
###########FUNCTIONS#############
#################################
#Other functions
get_mid <- function(spend_upper_bound, spend_lower_bound) {
# (spend_upper_bound-spend_lower_bound)/2+spend_lower_bound
(spend_upper_bound+spend_lower_bound)/2
}
assign_colors <- function(dat, n = 12) {
color_sample <- colorspace::divergingx_hcl(n)
lenght <- dat$color[is.na(dat$color)] %>% length
if(lenght==0) return(invisible())
cols <- sample(color_sample, lenght, replace = T)
dat$color[is.na(dat$color)] <- cols
return(dat)
}
unnest_geos <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(region_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)%>%
mutate(start_time = x$start_time)%>%
mutate(advertiser_name = x$advertiser_name)
}
unnest_dems <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(demographic_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)
}
last_updated_time <- as.character(Sys.time())
mean(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
median(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
sd(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
View(muni_mentions_analysis_ads_combined)
str(muni_mentions_analysis_ads_combined)
### ---- Load Packages and Functions  ####
#devtools::install_github("facebookresearch/Radlibrary")
#remotes::install_github("favstats/metatargetr")
library(tidyverse)
library(tidytext)
library(dplyr)
library(janitor)
library(highcharter)
library(httr)
library(furrr)
library(remotes)
library(lubridate)
library(purrr)
library(data.table)
library(stringdist)
#DATA VISUALIZATION
#install.packages('maps')
#install.packages("tibble")
#install.packages("forcats")
#install.packages("plotly")
#install.packages("sf")
library(ggplot2)
library(plotly)
library(sf)
library(maps)
library(tibble)
library(forcats)
#Regression analysis
#install.packages("caret")
#install.packages("car")
#install.packages("leaps")
#install.packages("MASS")
#install.packages("partykit")
#install.packages("nnet")
#install.packages("EMT")
library(caret)
library(car)
library(leaps)
library(MASS)
library(partykit)
library(nnet)
library(EMT)
#################################
###########FUNCTIONS#############
#################################
#Other functions
get_mid <- function(spend_upper_bound, spend_lower_bound) {
# (spend_upper_bound-spend_lower_bound)/2+spend_lower_bound
(spend_upper_bound+spend_lower_bound)/2
}
assign_colors <- function(dat, n = 12) {
color_sample <- colorspace::divergingx_hcl(n)
lenght <- dat$color[is.na(dat$color)] %>% length
if(lenght==0) return(invisible())
cols <- sample(color_sample, lenght, replace = T)
dat$color[is.na(dat$color)] <- cols
return(dat)
}
unnest_geos <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(region_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)%>%
mutate(start_time = x$start_time)%>%
mutate(advertiser_name = x$advertiser_name)
}
unnest_dems <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(demographic_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)
}
last_updated_time <- as.character(Sys.time())
mean(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
median(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
sd(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
### ---- Load Packages and Functions  ####
#devtools::install_github("facebookresearch/Radlibrary")
#remotes::install_github("favstats/metatargetr")
library(tidyverse)
library(tidytext)
library(dplyr)
library(janitor)
library(highcharter)
library(httr)
library(furrr)
library(remotes)
library(lubridate)
library(purrr)
library(data.table)
library(stringdist)
#DATA VISUALIZATION
#install.packages('maps')
#install.packages("tibble")
#install.packages("forcats")
#install.packages("plotly")
#install.packages("sf")
library(ggplot2)
library(plotly)
library(sf)
library(maps)
library(tibble)
library(forcats)
#Regression analysis
#install.packages("caret")
#install.packages("car")
#install.packages("leaps")
#install.packages("MASS")
#install.packages("partykit")
#install.packages("nnet")
#install.packages("EMT")
library(caret)
library(car)
library(leaps)
library(MASS)
library(partykit)
library(nnet)
library(EMT)
#################################
###########FUNCTIONS#############
#################################
#Other functions
get_mid <- function(spend_upper_bound, spend_lower_bound) {
# (spend_upper_bound-spend_lower_bound)/2+spend_lower_bound
(spend_upper_bound+spend_lower_bound)/2
}
assign_colors <- function(dat, n = 12) {
color_sample <- colorspace::divergingx_hcl(n)
lenght <- dat$color[is.na(dat$color)] %>% length
if(lenght==0) return(invisible())
cols <- sample(color_sample, lenght, replace = T)
dat$color[is.na(dat$color)] <- cols
return(dat)
}
unnest_geos <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(region_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)%>%
mutate(start_time = x$start_time)%>%
mutate(advertiser_name = x$advertiser_name)
}
unnest_dems <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(demographic_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)
}
last_updated_time <- as.character(Sys.time())
sd(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
### ---- Load Packages and Functions  ####
#devtools::install_github("facebookresearch/Radlibrary")
#remotes::install_github("favstats/metatargetr")
library(tidyverse)
library(tidytext)
library(dplyr)
library(janitor)
library(highcharter)
library(httr)
library(furrr)
library(remotes)
library(lubridate)
library(purrr)
library(data.table)
library(stringdist)
#DATA VISUALIZATION
#install.packages('maps')
#install.packages("tibble")
#install.packages("forcats")
#install.packages("plotly")
#install.packages("sf")
library(ggplot2)
library(plotly)
library(sf)
library(maps)
library(tibble)
library(forcats)
#Regression analysis
#install.packages("caret")
#install.packages("car")
#install.packages("leaps")
#install.packages("MASS")
#install.packages("partykit")
#install.packages("nnet")
#install.packages("EMT")
library(caret)
library(car)
library(leaps)
library(MASS)
library(partykit)
library(nnet)
library(EMT)
#################################
###########FUNCTIONS#############
#################################
#Other functions
get_mid <- function(spend_upper_bound, spend_lower_bound) {
# (spend_upper_bound-spend_lower_bound)/2+spend_lower_bound
(spend_upper_bound+spend_lower_bound)/2
}
assign_colors <- function(dat, n = 12) {
color_sample <- colorspace::divergingx_hcl(n)
lenght <- dat$color[is.na(dat$color)] %>% length
if(lenght==0) return(invisible())
cols <- sample(color_sample, lenght, replace = T)
dat$color[is.na(dat$color)] <- cols
return(dat)
}
unnest_geos <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(region_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)%>%
mutate(start_time = x$start_time)%>%
mutate(advertiser_name = x$advertiser_name)
}
unnest_dems <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(demographic_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)
}
last_updated_time <- as.character(Sys.time())
mean(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
median(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
sd(muni_mentions_analysis_ads_combined$unique_mentions, na.rm = TRUE)
### ---- Load Packages and Functions  ####
#devtools::install_github("facebookresearch/Radlibrary")
#remotes::install_github("favstats/metatargetr")
library(tidyverse)
library(tidytext)
library(dplyr)
library(janitor)
library(highcharter)
library(httr)
library(furrr)
library(remotes)
library(lubridate)
library(purrr)
library(data.table)
library(stringdist)
#DATA VISUALIZATION
#install.packages('maps')
#install.packages("tibble")
#install.packages("forcats")
#install.packages("plotly")
#install.packages("sf")
library(ggplot2)
library(plotly)
library(sf)
library(maps)
library(tibble)
library(forcats)
#Regression analysis
#install.packages("caret")
#install.packages("car")
#install.packages("leaps")
#install.packages("MASS")
#install.packages("partykit")
#install.packages("nnet")
#install.packages("EMT")
library(caret)
library(car)
library(leaps)
library(MASS)
library(partykit)
library(nnet)
library(EMT)
#################################
###########FUNCTIONS#############
#################################
#Other functions
get_mid <- function(spend_upper_bound, spend_lower_bound) {
# (spend_upper_bound-spend_lower_bound)/2+spend_lower_bound
(spend_upper_bound+spend_lower_bound)/2
}
assign_colors <- function(dat, n = 12) {
color_sample <- colorspace::divergingx_hcl(n)
lenght <- dat$color[is.na(dat$color)] %>% length
if(lenght==0) return(invisible())
cols <- sample(color_sample, lenght, replace = T)
dat$color[is.na(dat$color)] <- cols
return(dat)
}
unnest_geos <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(region_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)%>%
mutate(start_time = x$start_time)%>%
mutate(advertiser_name = x$advertiser_name)
}
unnest_dems <- function(x) {
# cat(glue::glue("{x$row_number} out of {nrow(age_gender_targeted_raw)} ({round(100*x$row_number/nrow(age_gender_targeted_raw), 2)}%)\n\n"))
x %>%
dplyr::pull(demographic_distribution) %>%
flatten() %>%
map_dfr(flatten) %>%
mutate(id = x$id)
}
last_updated_time <- as.character(Sys.time())
mean(muni_mentions_analysis_ads_combined$total_mentions, na.rm = TRUE)
median(muni_mentions_analysis_ads_combined$total_mentions, na.rm = TRUE)
sd(muni_mentions_analysis_ads_combined$total_mentions, na.rm = TRUE)
save.image("C:/Users/andre/Documents/GitHub/Cartographies2022Election/MacroEnvironment.RData")
